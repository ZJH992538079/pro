<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 使用fastjson来序列化和反序列化数据 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
						<value>application/xml;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties"/>
	</bean>

	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1"/>
		<property name="minIdle" value="1"/>
		<property name="maxActive" value="20"/>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>

		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat"/>
	</bean>

	<!-- MyBatis映射文件和映射接口扫描： (当全部采用注解配置Mapper时可以省略)采用XML配置Mapper时，必须同时指明以下两个Bean -->
	<!-- Spring 整合Mybatis：使用IOC容器替代原有的SqlSessionFactroy -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis的配置文件路径: 如果MyBatis配置文件中有特殊的配置时可以写下面这句,否则可以省略 -->
		<!--<property name="configLocation" value="classpath:mybatis.xml"/>-->
		<!-- 映射文件路径(可以使用通配符) -->
		<property name="mapperLocations" value="classpath*:cn/laeni/project1/mapper/xml/*.xml"/>
	</bean>
	<!-- 自动映射接口扫描器：自动识别这些映射接口,如果有注解的直接生成相关的Mapper,如果没有注解的还会与上面扫到的xml进行适配 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描映射接口所在位置 -->
		<property name="basePackage" value="cn.laeni.project1.mapper"/>
		<!-- 告诉Spring扫描到的接口交给哪个SqlSessionFactory使用 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<!-- end MyBatis映射文件和映射接口扫描-->

	<!-- 事物管理 -->
	<!-- 开启事物注解功能 -->
	<!--<tx:annotation-driven transaction-manager="txManager" />-->
	<!-- 事物管理器，要申明事物管理作用于哪个数据源链接的数据库上 -->
	<!--	<bean id="txManager"
			  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>-->
	<!-- end 事务管理 -->

	<!-- MVC文件上传 -->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		&lt;!&ndash; 指定上传的文件的最大值(单位字节,1KB=1024字节),-1表示不受限制 &ndash;&gt;
		<property name="maxUploadSize" value="-1"/>
	</bean>
-->
</beans>